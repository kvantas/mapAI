% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/read_gcps.R
\name{read_gcps}
\alias{read_gcps}
\title{Read and Prepare Homologous Points (GCPs)}
\usage{
read_gcps(gcp_path, crs)
}
\arguments{
\item{gcp_path}{A character string specifying the path to the CSV file of homologous points.}

\item{crs}{The coordinate reference system (CRS) of the \code{source_x} and \code{source_y}
coordinates. This is a \strong{required} parameter to ensure spatial context.
It can be an EPSG code (e.g., \code{32632}) or a WKT string.}
}
\value{
An \code{sf} object of the homologous points, with point geometries based on
the source coordinates and calculated \code{dx} and \code{dy} displacement columns.
}
\description{
Reads a CSV file containing homologous points and prepares them for
modeling by calculating displacement vectors and creating an \code{sf} object.
}
\details{
This function is the first step in the modeling workflow. It requires a
CSV file with four specific columns: \code{source_x} and \code{source_y} (coordinates from
the old/distorted map) and \code{target_x} and \code{target_y} (coordinates from the
reference/true map). It calculates the \code{dx} and \code{dy} errors that the models will learn to predict.
}
\examples{
\dontrun{
# First, create a demo CSV file
demo_files <- create_demo_data()

# Read the GCPs, providing the CRS for the source coordinates
# (The demo data uses a placeholder CRS of 3857)
gcp_data <- read_gcps(gcp_path = demo_files$gcp_path, crs = 3857)

# The output is now ready for model training
print(gcp_data)
}
}
