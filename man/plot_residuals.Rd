% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/plot_residuals.R
\name{plot_residuals}
\alias{plot_residuals}
\title{Plot Model Residuals at Homologous Point Locations}
\usage{
plot_residuals(
  pai_model,
  gcp_data,
  title = "Model Residual Error Vectors",
  subtitle = "Arrows point from predicted to true target locations",
  arrow_color = "darkblue",
  point_color = "blue"
)
}
\arguments{
\item{pai_model}{An object of class \code{pai_model} from \code{train_pai_model()}.}

\item{gcp_data}{An \code{sf} object of homologous points, from \code{read_gcps()}.}

\item{title}{A character string for the plot's main title.}

\item{subtitle}{A character string for the plot's subtitle.}

\item{arrow_color}{A character string specifying the color of the residual arrows.}

\item{point_color}{A character string specifying the color of the points marking the predicted locations.}
}
\value{
A \code{ggplot} object, which can be further customized.
}
\description{
Creates a vector plot showing the residual errors of a trained PAI
model at the location of the Ground Control Points (GCPs).
}
\details{
This is a crucial diagnostic function for assessing model performance. It answers
the question: "What errors did the model fail to correct?"

The function first predicts the correction for each GCP. It then calculates the
model's predicted target coordinate for each point. The resulting arrows are
drawn starting from this \strong{predicted target location} and pointing to the
\strong{true target location}.

A perfect model would have zero-length residual vectors. The presence of long
arrows or clear spatial patterns in the residuals may indicate that the chosen
model was not complex enough to capture the full distortion pattern.
}
\examples{
# --- 1. Load data and train a simple model ---
data(swiss_cps)
# A helmert model is used as it will leave significant residuals.
helmert_model <- train_pai_model(swiss_cps, method = "helmert")

# --- 2. Plot the residuals with default colors ---
plot_residuals(helmert_model, swiss_cps)

# --- 3. Compare with a more advanced model ---
  gam_model <- train_pai_model(swiss_cps, method = "gam")

# The residuals for the GAM model should be much smaller and more random.
plot_residuals(gam_model, swiss_cps,
               arrow_color = "#006d2c", # A dark green
               point_color = "#66c2a5"  # A lighter green
)

}
