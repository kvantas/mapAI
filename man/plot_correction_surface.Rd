% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/plot_correction_surface.R
\name{plot_correction_surface}
\alias{plot_correction_surface}
\title{Plot the Learned Correction Surface}
\usage{
plot_correction_surface(
  pai_model,
  gcp_data,
  n_grid = 100,
  plot_gcps = TRUE,
  dx_range = NULL,
  dy_range = NULL
)
}
\arguments{
\item{pai_model}{A trained \code{pai_model} object returned by \code{train_pai_model()}.}

\item{gcp_data}{The \code{sf} object of homologous points that was used for
training the model.}

\item{n_grid}{The resolution of the interpolation grid used to create the
smooth surface. Higher values create a more detailed plot but take longer to
compute. Defaults to 100.}

\item{plot_gcps}{A logical value indicating whether to plot the GCP
locations on the correction surfaces. Defaults to \code{TRUE}.}

\item{dx_range}{A numeric vector of length 2 specifying the limits for the
\code{dx} color scale (e.g., \code{c(-10, 10)}). Defaults to \code{NULL}, which uses the
data's range.}

\item{dy_range}{A numeric vector of length 2 specifying the limits for the
\code{dy} color scale. Defaults to \code{NULL}.}
}
\value{
A list containing two \code{ggplot} objects: \code{dx_plot} and \code{dy_plot}. You can plot them individually.
}
\description{
Visualizes the spatial correction field (dx, dy) learned by a
PAI model.
}
\details{
This function serves as a key diagnostic tool for understanding the
behavior of a trained \code{pai_model}. It creates two raster plots: one for the
\code{dx} (East-West) corrections and one for the \code{dy} (North-South) corrections.

The color intensity on the plots reveals the magnitude of the correction at
any given location. Contour lines show the gradient of the change, and black
crosses mark the location of the original Ground Control Points (GCPs),
showing where the model had direct information to learn from.

By examining these surfaces, users can:
\itemize{
\item Understand the spatial nature of the distortion their model has
learned.
\item Identify areas of high vs. low correction.
\item Spot potential issues like extreme corrections or unusual artifacts,
especially at the edges of the data where the model is extrapolating.
}
}
\examples{
\dontrun{
# This example demonstrates how to train a model and then visualize
# what it has learned.

# --- 1. Load required data from the package ---
data(gcps)

# --- 2. Train a model to visualize ---
# A GAM (Generalized Additive Model) is a great choice for this
# because it naturally produces smooth surfaces that are easy to interpret.
pai_model_gam <- train_pai_model(gcps, pai_method = "gam")

# --- 3. Generate and display the plot ---
# This creates a list with two plots, one for dx and one for dy.
correction_plots <- plot_correction_surface(
  pai_model = pai_model_gam,
  gcp_data = gcps,
  n_grid = 75 # Using a slightly coarser grid for a quick example
)

# To display the plots, you can print them individually.
print(correction_plots$dx_plot)
print(correction_plots$dy_plot)

# --- 4. Set custom ranges for the color scales ---
custom_range_plots <- plot_correction_surface(
  pai_model = pai_model_gam,
  gcp_data = gcps,
  dx_range = c(-5, 5),
  dy_range = c(-10, 0)
)
print(custom_range_plots$dx_plot)
}
}
